swagger: '2.0'
info:
  description: ViruSafe Backend REST API
  version: 1.0.0
  title: ViruSafe Backend REST API
host: 'localhost:8080'
basePath: /
tags:
  - name: location-controller
    description: Location Controller
  - name: personal-information-controller
    description: Personal Information Controller
  - name: questionnaire-controller
    description: Questionnaire Controller
  - name: registration-controller
    description: Registration Controller
paths:
  /location/gps:
    post:
      tags:
        - location-controller
      summary: Submit GPS coordinates
      operationId: gpsLocationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: true
          type: string
          x-example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVkT24iOiIxNTY3NjUyNDAwIiwidXNlckd1aWQiOiJiYTBkNDdhYS0yYjYwLTQ5OTAtOGU5MS04MDIwYWU3ZTRkMTAiLCJqd3RTZWNyZXQiOiI3NjFiOGEyNi03N2YxLTQxNDEtOWVjNy0wZmZkMmEwZThkNjkiLCJwaG9uZU51bWJlciI6IjU1NTU1NTU1NTUiLCJleHAiOjE1OTkyNzQ4MDB9.DHgcQA0NAa7nySMD02dhhQKrcYP7LvC9AgJYLp-S0nQ
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
        - in: body
          name: locationGpsDTO
          description: locationGpsDTO
          required: true
          schema:
            $ref: '#/definitions/LocationGpsDTO'
      responses:
        '201':
          description: Submitted successfully
        '401':
          description: Access unauthorized
          schema:
            $ref: '#/definitions/ErrorDTO'
        '403':
          description: Access forbidden
          schema:
            $ref: '#/definitions/ErrorDTO'
        '404':
          description: No corresponding user was found
          schema:
            $ref: '#/definitions/ErrorDTO'
        '412':
          description: Request argument validation has failed
          schema:
            $ref: '#/definitions/ValidationErrorDTO'
        '429':
          description: Request rate limit has been exceeded
          schema:
            $ref: '#/definitions/ErrorDTO'
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
  /location/proximity:
    post:
      tags:
        - location-controller
      summary: Submit devices in proximity
      operationId: proximityLocationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: true
          type: string
          x-example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVkT24iOiIxNTY3NjUyNDAwIiwidXNlckd1aWQiOiJiYTBkNDdhYS0yYjYwLTQ5OTAtOGU5MS04MDIwYWU3ZTRkMTAiLCJqd3RTZWNyZXQiOiI3NjFiOGEyNi03N2YxLTQxNDEtOWVjNy0wZmZkMmEwZThkNjkiLCJwaG9uZU51bWJlciI6IjU1NTU1NTU1NTUiLCJleHAiOjE1OTkyNzQ4MDB9.DHgcQA0NAa7nySMD02dhhQKrcYP7LvC9AgJYLp-S0nQ
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
        - in: body
          name: locationProximityDTO
          description: locationProximityDTO
          required: true
          schema:
            $ref: '#/definitions/LocationProximityDTO'
      responses:
        '201':
          description: Submitted successfully
        '401':
          description: Access unauthorized
          schema:
            $ref: '#/definitions/ErrorDTO'
        '403':
          description: Access forbidden
          schema:
            $ref: '#/definitions/ErrorDTO'
        '404':
          description: No corresponding user was found
          schema:
            $ref: '#/definitions/ErrorDTO'
        '412':
          description: Request argument validation has failed
          schema:
            $ref: '#/definitions/ValidationErrorDTO'
        '429':
          description: Request rate limit has been exceeded
          schema:
            $ref: '#/definitions/ErrorDTO'
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
  /personalinfo:
    get:
      tags:
        - personal-information-controller
      summary: Get the current user's personal information
      operationId: getPersonalInformationUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: true
          type: string
          x-example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVkT24iOiIxNTY3NjUyNDAwIiwidXNlckd1aWQiOiJiYTBkNDdhYS0yYjYwLTQ5OTAtOGU5MS04MDIwYWU3ZTRkMTAiLCJqd3RTZWNyZXQiOiI3NjFiOGEyNi03N2YxLTQxNDEtOWVjNy0wZmZkMmEwZThkNjkiLCJwaG9uZU51bWJlciI6IjU1NTU1NTU1NTUiLCJleHAiOjE1OTkyNzQ4MDB9.DHgcQA0NAa7nySMD02dhhQKrcYP7LvC9AgJYLp-S0nQ
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PersonalInformationResponseDTO'
        '401':
          description: Access unauthorized
          schema:
            $ref: '#/definitions/ErrorDTO'
        '403':
          description: Access forbidden
          schema:
            $ref: '#/definitions/ErrorDTO'
        '404':
          description: No corresponding user was found
          schema:
            $ref: '#/definitions/ErrorDTO'
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
    post:
      tags:
        - personal-information-controller
      summary: Submit user personal information
      operationId: addPersonalInformationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: true
          type: string
          x-example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVkT24iOiIxNTY3NjUyNDAwIiwidXNlckd1aWQiOiJiYTBkNDdhYS0yYjYwLTQ5OTAtOGU5MS04MDIwYWU3ZTRkMTAiLCJqd3RTZWNyZXQiOiI3NjFiOGEyNi03N2YxLTQxNDEtOWVjNy0wZmZkMmEwZThkNjkiLCJwaG9uZU51bWJlciI6IjU1NTU1NTU1NTUiLCJleHAiOjE1OTkyNzQ4MDB9.DHgcQA0NAa7nySMD02dhhQKrcYP7LvC9AgJYLp-S0nQ
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
        - in: body
          name: personalInformationDTO
          description: personalInformationDTO
          required: true
          schema:
            $ref: '#/definitions/PersonalInformationRequestDTO'
      responses:
        '201':
          description: Submitted successfully
        '401':
          description: Access unauthorized
          schema:
            $ref: '#/definitions/ErrorDTO'
        '403':
          description: Access forbidden
          schema:
            $ref: '#/definitions/ErrorDTO'
        '404':
          description: No corresponding user was found
          schema:
            $ref: '#/definitions/ErrorDTO'
        '412':
          description: Request argument validation has failed
          schema:
            $ref: '#/definitions/ValidationErrorDTO'
        '429':
          description: Request rate limit has been exceeded
          schema:
            $ref: '#/definitions/ErrorDTO'
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
    delete:
      tags:
        - personal-information-controller
      summary: Delete the current user's personal information
      operationId: deletePersonalInformationUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: true
          type: string
          x-example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVkT24iOiIxNTY3NjUyNDAwIiwidXNlckd1aWQiOiJiYTBkNDdhYS0yYjYwLTQ5OTAtOGU5MS04MDIwYWU3ZTRkMTAiLCJqd3RTZWNyZXQiOiI3NjFiOGEyNi03N2YxLTQxNDEtOWVjNy0wZmZkMmEwZThkNjkiLCJwaG9uZU51bWJlciI6IjU1NTU1NTU1NTUiLCJleHAiOjE1OTkyNzQ4MDB9.DHgcQA0NAa7nySMD02dhhQKrcYP7LvC9AgJYLp-S0nQ
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Access unauthorized
          schema:
            $ref: '#/definitions/ErrorDTO'
        '403':
          description: Access forbidden
          schema:
            $ref: '#/definitions/ErrorDTO'
        '404':
          description: No corresponding user was found
          schema:
            $ref: '#/definitions/ErrorDTO'
        '429':
          description: Request rate limit has been exceeded
          schema:
            $ref: '#/definitions/ErrorDTO'
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
  /pin:
    post:
      tags:
        - registration-controller
      summary: Generate a verification PIN and send it to the given phone number
      operationId: createPinUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
        - in: body
          name: pinGenerationDTO
          description: pinGenerationDTO
          required: true
          schema:
            $ref: '#/definitions/PinGenerationDTO'
      responses:
        '201':
          description: PIN created and request sent to the SMS service
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '412':
          description: Request argument validation has failed
          schema:
            $ref: '#/definitions/ValidationErrorDTO'
        '429':
          description: Request rate limit has been exceeded
          schema:
            $ref: '#/definitions/ErrorDTO'
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
  /pushtoken:
    post:
      tags:
        - registration-controller
      summary: Register a new notification push token for the user
      operationId: addPushTokenUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: true
          type: string
          x-example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVkT24iOiIxNTY3NjUyNDAwIiwidXNlckd1aWQiOiJiYTBkNDdhYS0yYjYwLTQ5OTAtOGU5MS04MDIwYWU3ZTRkMTAiLCJqd3RTZWNyZXQiOiI3NjFiOGEyNi03N2YxLTQxNDEtOWVjNy0wZmZkMmEwZThkNjkiLCJwaG9uZU51bWJlciI6IjU1NTU1NTU1NTUiLCJleHAiOjE1OTkyNzQ4MDB9.DHgcQA0NAa7nySMD02dhhQKrcYP7LvC9AgJYLp-S0nQ
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
        - in: body
          name: pushTokenDTO
          description: pushTokenDTO
          required: true
          schema:
            $ref: '#/definitions/PushTokenDTO'
      responses:
        '200':
          description: Successfully registered push token
        '201':
          description: Created
        '401':
          description: Access unauthorized
          schema:
            $ref: '#/definitions/ErrorDTO'
        '403':
          description: Access forbidden
          schema:
            $ref: '#/definitions/ErrorDTO'
        '404':
          description: No corresponding user was found
          schema:
            $ref: '#/definitions/ErrorDTO'
        '412':
          description: Request argument validation has failed
          schema:
            $ref: '#/definitions/ValidationErrorDTO'
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
  /questionnaire:
    get:
      tags:
        - questionnaire-controller
      summary: Get all questionnaire questions
      operationId: getQuestionnaireUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: true
          type: string
          x-example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVkT24iOiIxNTY3NjUyNDAwIiwidXNlckd1aWQiOiJiYTBkNDdhYS0yYjYwLTQ5OTAtOGU5MS04MDIwYWU3ZTRkMTAiLCJqd3RTZWNyZXQiOiI3NjFiOGEyNi03N2YxLTQxNDEtOWVjNy0wZmZkMmEwZThkNjkiLCJwaG9uZU51bWJlciI6IjU1NTU1NTU1NTUiLCJleHAiOjE1OTkyNzQ4MDB9.DHgcQA0NAa7nySMD02dhhQKrcYP7LvC9AgJYLp-S0nQ
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
        - name: language
          in: header
          description: Language
          required: false
          type: string
          x-example: en
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/QuestionDTO'
            example:
              - "id": 1
                "questionTitle": "Body temperature above 38C"
                "questionType": "BOOLEAN"
              - "id": 2
                "questionTitle": "Dry cough"
                "questionType": "BOOLEAN"
              - "id": 3
                "questionTitle": "Difficulty breathing or shortness of breath"
                "questionType": "BOOLEAN"
              - "id": 4
                "questionTitle": "Persistent pain or pressure in the chest"
                "questionType": "BOOLEAN"
              - "id": 5
                "questionTitle": "Bluish lips or face"
                "questionType": "BOOLEAN"
              - "id": 6
                "questionTitle": "Nausea, vomiting and/or diarrhoea"
                "questionType": "BOOLEAN"
              - "id": 7
                "questionTitle": "Lightheadedness or Vertigo"
                "questionType": "BOOLEAN"
        '401':
          description: Access unauthorized
          schema:
            $ref: '#/definitions/ErrorDTO'
        '403':
          description: Access forbidden
          schema:
            $ref: '#/definitions/ErrorDTO'
        '404':
          description: Not Found
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
    post:
      tags:
        - questionnaire-controller
      summary: Submit a user's questionnaire actions
      operationId: postQuestionnaireUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: true
          type: string
          x-example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVkT24iOiIxNTY3NjUyNDAwIiwidXNlckd1aWQiOiJiYTBkNDdhYS0yYjYwLTQ5OTAtOGU5MS04MDIwYWU3ZTRkMTAiLCJqd3RTZWNyZXQiOiI3NjFiOGEyNi03N2YxLTQxNDEtOWVjNy0wZmZkMmEwZThkNjkiLCJwaG9uZU51bWJlciI6IjU1NTU1NTU1NTUiLCJleHAiOjE1OTkyNzQ4MDB9.DHgcQA0NAa7nySMD02dhhQKrcYP7LvC9AgJYLp-S0nQ
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
        - in: body
          name: questionnairePostDTO
          description: questionnairePostDTO
          required: true
          schema:
            $ref: '#/definitions/QuestionnairePostDTO'
      responses:
        '201':
          description: Successfully submitted questionnaire
        '401':
          description: Access unauthorized
          schema:
            $ref: '#/definitions/ErrorDTO'
        '403':
          description: Access forbidden
          schema:
            $ref: '#/definitions/ErrorDTO'
        '404':
          description: No corresponding user was found
          schema:
            $ref: '#/definitions/ErrorDTO'
        '412':
          description: Request argument validation has failed
          schema:
            $ref: '#/definitions/ValidationErrorDTO'
        '429':
          description: Request rate limit has been exceeded
          schema:
            $ref: '#/definitions/ErrorDTO'
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
  /token:
    post:
      tags:
        - registration-controller
      summary: Verify that the passed PIN and phone number match and generate an access token
      operationId: createTokenUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
        - in: body
          name: tokenGenerationDTO
          description: tokenGenerationDTO
          required: true
          schema:
            $ref: '#/definitions/TokenGenerationDTO'
      responses:
        '201':
          description: 'PIN matches, JWT generated'
          schema:
            $ref: '#/definitions/AccessTokenDTO'
        '401':
          description: Access unauthorized
          schema:
            $ref: '#/definitions/ErrorDTO'
        '403':
          description: Access forbidden
          schema:
            $ref: '#/definitions/ErrorDTO'
        '404':
          description: Not Found
        '412':
          description: Request argument validation has failed
          schema:
            $ref: '#/definitions/ValidationErrorDTO'
        '438':
          description: Could not verify matching PIN and phone number
          schema:
            $ref: '#/definitions/ErrorDTO'
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
  /token/refresh:
    post:
      tags:
        - registration-controller
      summary: Generate a new access token from a refresh token
      operationId: refreshTokenUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: Client ID
          required: true
          type: string
          x-example: 3b3d3b02-e052-4289-827b-6c2f2e2a0430
        - in: body
          name: tokenRefreshDTO
          description: tokenRefreshDTO
          required: true
          schema:
            $ref: '#/definitions/TokenRefreshDTO'
      responses:
        '201':
          description: 'Access token matches, JWT generated'
          schema:
            $ref: '#/definitions/AccessTokenDTO'
        '401':
          description: Access unauthorized
          schema:
            $ref: '#/definitions/ErrorDTO'
        '403':
          description: Access forbidden
          schema:
            $ref: '#/definitions/ErrorDTO'
        '404':
          description: Not Found
        '412':
          description: Request argument validation has failed
          schema:
            $ref: '#/definitions/ValidationErrorDTO'
        '438':
          description: Could not verify refresh token validity
          schema:
            $ref: '#/definitions/ErrorDTO'
        '500':
          description: An unexpected server error has occurred
          schema:
            $ref: '#/definitions/ErrorDTO'
      deprecated: false
definitions:
  AccessTokenDTO:
    type: object
    properties:
      accessToken:
        type: string
        example: eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVkT24iOiIxNTY3NjUyNDAwIiwidXNlckd1aWQiOiJiYTBkNDdhYS0yYjYwLTQ5OTAtOGU5MS04MDIwYWU3ZTRkMTAiLCJqd3RTZWNyZXQiOiI3NjFiOGEyNi03N2YxLTQxNDEtOWVjNy0wZmZkMmEwZThkNjkiLCJwaG9uZU51bWJlciI6IjU1NTU1NTU1NTUiLCJleHAiOjE1OTkyNzQ4MDB9.DHgcQA0NAa7nySMD02dhhQKrcYP7LvC9AgJYLp-S0nQ
      refreshToken:
        type: string
        example: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyR3VpZCI6ImJhMGQ0N2FhLTJiNjAtNDk5MC04ZTkxLTgwMjBhZTdlNGQxMCJ9.fR0oWMwH0ew-TBJSlSae_ZFlB2ehqEWM7MJQ93ybOV8
    title: AccessTokenDTO
  AnswerDTO:
    type: object
    properties:
      answer:
        type: string
        example: 'TRUE'
        pattern: '^[a-zA-Z0-9 ,.()а-яА-Я-]+$'
      questionId:
        type: integer
        format: int32
        example: 3
    title: AnswerDTO
  ErrorDTO:
    type: object
    properties:
      message:
        type: string
        example: Invalid request!
    title: ErrorDTO
  FieldValidationErrorDTO:
    type: object
    properties:
      fieldName:
        type: string
    title: FieldValidationErrorDTO
  Location:
    type: object
    properties:
      lat:
        type: number
        format: double
        example: 42.71
        minimum: -90
        maximum: 90
        exclusiveMinimum: false
        exclusiveMaximum: false
      lng:
        type: number
        format: double
        example: 23.32
        minimum: -180
        maximum: 180
        exclusiveMinimum: false
        exclusiveMaximum: false
    title: Location
  LocationGpsDTO:
    type: object
    required:
      - location
    properties:
      location:
        $ref: '#/definitions/Location'
      timestamp:
        type: integer
        format: int64
        example: 1567652400
    title: LocationGpsDTO
  LocationProximityDTO:
    type: object
    properties:
      location:
        $ref: '#/definitions/Location'
      proximities:
        type: array
        items:
          $ref: '#/definitions/ProximityDTO'
      timestamp:
        type: integer
        format: int64
        example: 1567652400
    title: LocationProximityDTO
  PersonalInformationRequestDTO:
    type: object
    properties:
      age:
        type: integer
        format: int32
        example: 33
        minimum: 14
        maximum: 150
        exclusiveMinimum: false
        exclusiveMaximum: false
      gender:
        type: string
        example: FEMALE
        enum:
          - MALE
          - FEMALE
      identificationNumber:
        type: string
        example: BG12345678
      identificationType:
        type: string
        example: PASSPORT
        enum:
          - EGN
          - LNCH
          - PASSPORT
      preExistingConditions:
        type: string
        example: Pre-existing conditions
        pattern: '^[a-zA-Z0-9 ,.()а-яА-Я-]{0,100}$'
    title: PersonalInformationRequestDTO
  PersonalInformationResponseDTO:
    type: object
    properties:
      age:
        type: integer
        format: int32
        example: 33
      gender:
        type: string
        example: FEMALE
        enum:
          - MALE
          - FEMALE
      identificationNumber:
        type: string
        example: BG12345678
      identificationType:
        type: string
        example: PASSPORT
        enum:
          - EGN
          - LNCH
          - PASSPORT
      phoneNumber:
        type: string
        example: 5555555555
      preExistingConditions:
        type: string
        example: Pre-existing conditions
    title: PersonalInformationResponseDTO
  PinGenerationDTO:
    type: object
    properties:
      phoneNumber:
        type: string
        example: 5555555555
        pattern: '[\+]{0,1}[\d]{10,14}'
    title: PinGenerationDTO
  ProximityDTO:
    type: object
    properties:
      distance:
        type: string
        example: 3.8
        pattern: '^[\d]+[.]{0,1}[\d]+$'
      uuid:
        type: string
        example: d70d5c29-30c0-415a-af6a-f7a2ccaa8c76
        pattern: '^[a-zA-Z0-9-]+$'
    title: ProximityDTO
  PushTokenDTO:
    type: object
    properties:
      pushToken:
        type: string
        example: 9077218c-ad45-4ac0-b2d3-0a566f48b9b7
        pattern: '^[a-zA-Z0-9?=:_-]{0,255}$'
    title: PushTokenDTO
  QuestionDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 3
      questionTitle:
        type: string
        example: Difficulty breathing or shortness of breath
      questionType:
        type: string
        example: BOOLEAN
        enum:
          - BOOLEAN
          - OPEN_ANSWER
    title: QuestionDTO
  QuestionnairePostDTO:
    type: object
    properties:
      answers:
        type: array
        items:
          $ref: '#/definitions/AnswerDTO'
      location:
        $ref: '#/definitions/Location'
      timestamp:
        type: integer
        format: int64
        example: 1567652400
    title: QuestionnairePostDTO
  TokenGenerationDTO:
    type: object
    properties:
      phoneNumber:
        type: string
        example: 5555555555
        pattern: '[\+]{0,1}[\d]{10,14}'
      pin:
        type: string
        example: '000000'
        pattern: '[\d]{6}'
    title: TokenGenerationDTO
  TokenRefreshDTO:
    type: object
    properties:
      refreshToken:
        type: string
        example: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyR3VpZCI6ImJhMGQ0N2FhLTJiNjAtNDk5MC04ZTkxLTgwMjBhZTdlNGQxMCJ9.fR0oWMwH0ew-TBJSlSae_ZFlB2ehqEWM7MJQ93ybOV8
    title: TokenRefreshDTO
  ValidationErrorDTO:
    type: object
    properties:
      message:
        type: string
        example: Request arguments validation failed!
      validationErrors:
        type: array
        items:
          $ref: '#/definitions/FieldValidationErrorDTO'
    title: ValidationErrorDTO
