server.port=8080

spring.elasticsearch.rest.uris=localhost:9200
spring.elasticsearch.rest.username=
spring.elasticsearch.rest.password=

management.endpoint.health.show-details=always
management.endpoint.info.show-details=always

questions.file.path=questions.json
questions.default.language=bg

jwt.secret-key=cE1UMm9adENBQk1SZnVkTl9sU252WWNkc0hlWUpxWHBTR2xXN2FVUXNBSS0wMDVIcWNudUg1ZTI0aGxXc3F6SmFYbXZsU3N0Y3BYYmJqWW5oWFNSZXVPOFdQTUJKYWM1TnpfME5ubEhtd21Qa1BtTktQX2ExSE83R0lWNllXNkFwcXdwVkpqUUhZdzI4RmVCZTdNRzc0UFNEb1dkLUtGTGR5SnhFN0hoNXZDZWhabjNOUW9Bclg1VEd3T0haU3RoVy1TTUVLbldjN0ZaWVE3V082Y1ByaXdXRXI2ZEJqSXU4aVJfb2VrNlFHNmdMcTd1NVVYMEpvVkVYUmthLWFhc3NVbnlCSWs4VloxTWZkTUtsR0dDMWVaVElDMmJVYnNJOHdVQTlZeWkxRUFDT0hfZkw0c3VKNUwwa0FablA3ME5sQWROUHh5RFdaN2JaWk5nMmxOZG1R
jwt.bearer-prefix=Bearer
jwt.authorization-header-name=Authorization
jwt.algorithm=HS512
jwt.created-claim=createdOn
jwt.user-guid-claim=userGuid
jwt.client-ids=3b3d3b02-e052-4289-827b-6c2f2e2a0430
jwt.client-id-header-name=clientId
# Token/refresh validity in seconds. 5184000 = 60 days, 31556952 = 365.2425 days
jwt.token-validity=5184000
jwt.refresh-validity=31556952
jwt.secret-claim=jwtSecret
jwt.hash-algorithm=SHA-512
jwt.number-claim=phoneNumber


#Valid strategies are SIX_DIGITS or SIX_ZEROES
pin.generation.strategy=SIX_ZEROES
pin.generation.valid.minutes=5
pin.generation.valid.limit=3

spring.datasource.url=jdbc:mariadb://localhost:3306/virusafedb
spring.datasource.username=virusafe
spring.datasource.password=dev
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=validate

spring.kafka.admin.fail-fast=true
spring.kafka.bootstrapServers=localhost:9092
spring.kafka.client-id=viruSafe
spring.kafka.properties.questionnaireTopicName=io.virusafe.questionnaire
spring.kafka.properties.questionnaireTopicPartitions=5
spring.kafka.properties.questionnaireTopicReplicas=1
spring.kafka.producer.client-id=viruSafeProducer
spring.kafka.producer.retries=5
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

logging.pattern.console=%d{yy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %X{CorrelationId} %X{UserId} %logger{35} --- %msg %n

sms.service.service-id=274
sms.service.title=1909
sms.service.message-pattern=\u0412\u0430\u0448\u0438\u044f\u0442 \u043a\u043e\u0434 \u0437\u0430 ViruSafe \u0435 {0}

# Update rate timeouts in seconds
update.rate.questionnaire-submit-bucket-size=120
update.rate.questionnaire-submit-limit=1
update.rate.location-update-bucket-size=120
update.rate.location-update-limit=1
update.rate.pin-request-bucket-size=120
update.rate.pin-request-limit=3
update.rate.personal-info-update-bucket-size=120
update.rate.personal-info-update-limit=5
update.rate.push-token-update-bucket-size=120
update.rate.push-token-update-limit=2
update.rate.proximity-update-bucket-size=120
update.rate.proximity-update-limit=2

validation.strategy.personal-number.egn.enabled=true
validation.strategy.personal-number.lnch.enabled=true
validation.strategy.personal-number.passport.enabled=true
ios.validation.process.phone.number=9999999999

register.integration.enabled=true
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
register.integration.kafka.enabled=true
register.integration.kafka.symmetric.key=registerIntegrationPrivateKey
register.integration.kafka.symmetric.iv=testIV

encryption.provider.enable=true
encryption.iv.identification.number=testIdentificationIV
encryption.symmetric.key=localEncryptionKey
encryption.algorithm.digest=SHA-256
encryption.algorithm.encryption=AES/CBC/PKCS5Padding
encryption.algorithm.key=AES

async.task.executor.core-pool-size=75
async.task.executor.queue-capacity=75
async.task.executor.max-pool-size=100

firebase.push-notifications.enabled=true
firebase.key.path=firebase-adminsdk.json